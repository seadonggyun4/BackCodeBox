package main

import "fmt"

func main() {
	a := 3  //a라는 공간이 생기고 그 안에 3을 저장
	b := &a //b는  a라는 공간의 주소를 가리키는 포인터 있다.
	c := *b //c라는 공간에 포인터인b가 가리키는 공간의 실제 값을 불러온뒤 c 공간에 저장.
	fmt.Println("=========연산전==============")
	fmt.Println("a의 값 : ", a)
	fmt.Println("a의 포인터 : ", b)
	fmt.Println("포인터를 참조 : ", c)
	fmt.Println("\n\n")

	*b++ //포인터의 실제값을 *이용해 참조한뒤 ++와 같은 증감연산도 가능하다.
	d := *b
	fmt.Println("=========연산후==============")
	fmt.Println("a의 값 : ", a)
	fmt.Println("a의 포인터 : ", b)
	fmt.Println("연산전 포인터를 참조 : ", c) //c공간에 저장된 값은 3이기 때문에 a값이 변해도 그대로이다.
	fmt.Println("연산후 포인터를 참조 : ", d) //d공간에 변화된 a 값이 저장된다.
}

/*
위 내용을 살펴봤을땐

a라는 객체가 있을때

포인터: 포인터 a라는 저장공간의 주소를 그저 가리키기만 하고 본인의 저장공간은 없는
그래서 a의 값이 바뀔때 주소도 같이 바뀐다

주소를 참조하는 *: 포인터가 가리키고 있는 주소의 값을 복사해온다. 본인만의 저장공간이 생기는것

*/
