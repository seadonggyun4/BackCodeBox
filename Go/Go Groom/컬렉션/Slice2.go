// [Slice make 함수]
//======== Slice 는 make()함수로 선언만 하면서 크기를 미리 지정할 수 있습니다.=============

// " make(슬라이스 타입, 슬라이스 길이, 슬라이스의 용량) " 형태로 선언!!
// 용량은 생략하고 선언 가능하다! -> 길이와 동일하게 자동으로 용량 정해진다.

// make()함수를 사용해 슬라이스 메모리를 할당하고 난후 var을 이용해 값을 초기화 하면 새로운 메모리를 할당하면서 그전의 값은 없어집니다.
//메모리를 사용하고 값을 추가하기 위해서는 append()함수를 사용해야 합니다.

package main

import "fmt"

func main() {
	a := make( []int ,0,4) // make(슬라이스 타입, 슬라이스 길이,슬라이스 용량)
	fmt.Println("비어 있는 Slice:",a) // 길이에 0이 아닌 다른 값을 대입할시 그 값이 유지되어버린다.

	for i := 0; i < 10; i++ {
		a = append(a, i)
		fmt.Printf("i가 %d 일때 a길이: %d   a용량:%d \n",i,len(a),cap(a))//갑자기 용량이 10으로 바뀌는것은 반복문을 10까지 돌리기 때문에
	}
	fmt.Println("slice a 값 :",a)
	
}

// 용량이 남아있는 경우에는 그 용량 내에서 
// 슬라이스의 길이를 변경하여 데이터를 추가하고, 용량이 초과하는 경우에는 설정한 용량만큼 새로운 배열을 생성하고 
// 기존 배열 값들을 모두 새 배열에 복제한 후 다시 슬라이스를 할당하는 방식입니다.