//[================================================================== 일급함수 =======================================================]
/*일급함수 => 함수를 기본 타입과 동일하게 사용할 수 있어 함수 자체를
다른 함수의 매개변수로 전달하거나 다른 함수의 반환 값으로 사용될 수 있다는 것입니다.*/

//Go언어 에서의 함수는 일급함수 이기 때문에 매개변수로 사용할 수 있도, 변수에 초기화 할 수 있다.

// ===================================================================================================================================
package main

import "fmt"

// calc 함수의 "매개변수" -> 함수 f, 변수 a, 변수 b
// calc 함수의 "반환값" -> int선언은 됬지만 이름없음 -> 함수 내부에서 result로 지정
func calc(f func(int, int)int, a int, b int)int{
	result := f(a,b)
	return result
}
/*calc 함수는 인자로 빈껍대기 함수 f, 변수a,b를 받아서
f함수와 변수 a,b를 조립하는 함수 ->calc을 만든것이다.
*/



func main() {
	// "익명함수" 를 multi 변수에 초기화 시켰다.
	multi := func(i int, j int)int{
		return i * j
	}

	// calc 함수 매개변수 -> "multi함수, 10, 20"
	rl := calc(multi, 10, 20)
	fmt.Println(rl)


	// calc 함수 매개변수 -> "익명함수 선언, 10, 20"
	r2 := calc(func(x int, y int)int{return x + y}, 10,20)
	fmt.Println(r2)
	
}


//익명함수 는 "클로저", "defer", "Go루틴" 에서 많이 다루게 된다.